#include<iostream>
#include<conio.h>
using namespace std;
void knapsack();
int max(int,int);
int i,j,n,m,p[10],w[10],v[10][10];
int main()
{
cout<<"\nenter the no. of items:\t";
cin>>n;
cout<<"\nenter the weight of the each item:\n";
for(i=1;i<=n;i++)
{
 cin>>w[i];
}
cout<<"\nenter the profit of each item:\n";
for(i=1;i<=n;i++)
{
 cin>>p[i];
}
cout<<"\nenter the knapsack's capacity:\t";
cin>>m;
knapsack();
getch();
}
void knapsack()
{
int x[10];
for(i=0;i<=n;i++)
{
 for(j=0;j<=m;j++)
 {
 if(i==0||j==0)
 {
 v[i][j]=0;
 }
 else if(j-w[i]<0)
 {
 v[i][j]=v[i-1][j];
 }
 else
 {
 v[i][j]=max(v[i-1][j],v[i-1][j-w[i]]+p[i]);
 }
 }
}
cout<<"\nthe output is:\n";
for(i=0;i<=n;i++)
{
 for(j=0;j<=m;j++)
 {
 cout<<v[i][j]<<"\t";
 }
 cout<<"\n\n";
}
cout<<"\nthe optimal solution is "<<v[n][m];
cout<<"\nthe solution vector is:\n";
for(i=n;i>=1;i--)
{
 if(v[i][m]!=v[i-1][m])
 {
 x[i]=1;
 m=m-w[i];
 }
 else
 {
 x[i]=0;
 }
}
for(i=1;i<=n;i++)
{
 cout<<"\t"<<x[i];
}
}
int max(int x,int y)
{
if(x>y)
{
 return x;
}
else
{
 return y;
}
}
